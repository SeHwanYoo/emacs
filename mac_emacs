;;------------------------------------------------------------------------------------------
;; Package repositories
;;------------------------------------------------------------------------------------------

;; (package-initialize)
;; (require 'package)
;; ;; (add-to-list 'package-archives '("marmalade" . "http://marmalade-repo.org/packages/"))
;; (add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/"))
;; (package-initialize)

(package-initialize)
(require 'package)
(add-to-list 'package-archives '("marmalade" . "http://marmalade-repo.org/packages/"))
(add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/"))
(package-initialize)

;;------------------------------------------------------------------------------------------
;; Basic
;;------------------------------------------------------------------------------------------

;; auto-fill-mode disable
(auto-fill-mode -1)

;; turn on auto-fill for text-mode
;; (add-hook 'text-mode-hook 'turn-on-auto-fill)
;; turn off auto-fill for org-mode
(add-hook 'matlab-mode-hook 'turn-off-auto-fill)

;; font size
;; (set-face-font 'default "Monaco-13")	

;; Removing tutorial page
(setq inhibit-startup-message t)

;; cursor types
(setq-default cursor-type 'box)
;; (setq-default cursor-type 'bar)
;; (setq-default cursor-type 'hbar)

;; line number
(global-linum-mode t)

;; selection
(transient-mark-mode t)

;; whole selection
;; (define-key global-map (kbd "C-a") 'mark-whole-buffer)

;; tab size
(setq-default tab-width 2)

;; location view
(column-number-mode t)
(line-number-mode t)

;; Yes/NO - > y/n
(fset 'yes-or-no-p 'y-or-n-p)

;; ringing removing
(setq ring-bell-function 'ignore)

;; minibuffer histories
(savehist-mode 1)

;; window size
;; (add-to-list 'default-frame-alist '(height . 100))
;; (add-to-list 'default-frame-alist '(width . 200))
;; (set-frame-position (selected-frame) 0 0)
(add-to-list 'default-frame-alist '(fullscreen . maximized))

;;파일 편집 위치 기억
(require 'saveplace)
(setq-default save-place t)
(setq save-place-file     "~/_places.sav")

;;최근 파일 접근
(require 'recentf)
(recentf-mode 1)
(setq recentf-max-menu-items 20) ; 최근 파일 목록 수

;;GUI 환경에서 줄 간격 조절
(setq-default line-spacing 15)

;;파일이 수정되었을 때 자동으로 다시 읽어들이도록 하는 설정
(global-auto-revert-mode t)

;; blanket
(show-paren-mode 1)
(setq show-paren-delay 0)

;;파일 편집 위치 기억
;; (require 'saveplace)
;; (setq-default save-place t)
;; (setq save-place-file     "~/_places.sav")

;;최근 파일 접근
(require 'recentf)
(recentf-mode 1)
(setq recentf-max-menu-items 20) ; 최근 파일 목록 수

;;GUI 환경에서 줄 간격 조절
(setq-default line-spacing 1)

;;파일이 수정되었을 때 자동으로 다시 읽어들이도록 하는 설정
(global-auto-revert-mode t)

;;페이지 넘길 때 3줄은 포함.
(setq next-screen-context-lines 3)

;;찾기 기능에서 하이라이트 설정
(setq search-highlight t)

;;잘라내기, 붙여넣기, CTRL+C, V를 활성화 시켜준다. 윈도우 처럼 사용가능하다.
;; (cua-mode)

;;최근 작업 파일 목록 열기
(global-set-key [f1] 'recentf-open-files)

;파일 탐색기 Dired 모드 켜기
(global-set-key [f2] 'dired)

;;블럭 선택부분 색상 반전시키기
(setq-default transient-mark-mode t)

;; 탭 대신 공백 넣기
(setq-default indent-tabs-mode nil)

(defun set-default-programming-style ()
  ;; 엔터 입력시 들여쓰기
  (local-set-key (kbd "<return>") 'newline-and-indent)

  ;; 탭키 입력시 영역지정되어 있으면 영역 들여쓰기. 영역없으면 탭키.
  (local-set-key (kbd "<tab>") 'indent-block)

  ;; 들여쓰기 할 때 실제 탭문자 입력
  (setq indent-tabs-mode t)

  ;; 탭 사이즈 4
  (setq tab-width 4)

  ;; 줄번호 표시
  (linum-mode 1)
  )

;; backup files 위치 선정
(setq
   backup-by-copying t      ; don't clobber symlinks
   backup-directory-alist
    '(("." . "~/.saves/"))    ; don't litter my fs tree
   delete-old-versions t
   kept-new-versions 6
   kept-old-versions 2
   version-control t)       ; use versioned backups

;; 기본 디렉토리 변경
;; (setq default-directory "~/Desktop/projects/") 

;; 설정 파일
(global-set-key (kbd "<f10>") (lambda() (interactive)(find-file "~/.emacs")))

;; buffer font size 
(global-set-key (kbd "C-M-+") 'text-scale-increase)
(global-set-key (kbd "C-M--") 'text-scale-decrease)


;;===========================================================================
;; undo-tree 
;;===========================================================================

;; (require 'undo-tree)
;; (global-undo-tree-mode)

;; (eval-after-load "undo-tree"
;;   (lambda ()
;;     (define-key undo-tree-map (kbd "C-r") nil)
;;     (define-key undo-tree-map (kbd "C-?") nil)

;;     ;; C-? C-M-? C-/ 키로 org-agenda 명령을 수행합니다
;;     (define-key undo-tree-map (kbd "C-?") 'org-agenda-list)
;;     (define-key undo-tree-map (kbd "C-M-?") 'org-agenda)
;;     (define-key undo-tree-map (kbd "C-/") 'org-todo-list)

;;     ;; C-_ 키로 font 크기를 특정 크기로 맞춰주는 함수 설정
;;     (define-key undo-tree-map (kbd "C-_") 'set-frame-125)

;;     ))


;;===========================================================================
;; yasnippet
;;===========================================================================

;; Package: yasnippet
;; ~/.emacs.d/elpa/yasnippet-.../snippets 에 있는 파일들을 ~/.emacs.d/snippets 에 넣어야 정상적으로 동작합니다
(require 'yasnippet)
(yas-global-mode t)
(setq warning-suppress-types nil)
;; yasnippet에 elisp 함수를 쓰면 나타나는 경고문을 무시합니다
(add-to-list 'warning-suppress-types '(yasnippet backquote-change)) 


;;===========================================================================
;; anzu 
;;===========================================================================

;; PACKAGE: anzu
(require 'anzu)
(global-anzu-mode)

;; M-% 키로 해당 buffer에서 특정 단어를 바꿉니다
(global-set-key (kbd "M-%") 'anzu-query-replace)
;; C-M-% 키로 정규표현식을 이용한 단어치환을 합니다
(global-set-key (kbd "C-M-%") 'anzu-query-replace-regexp)


;; PACKAGE : flycheck
(require 'flycheck)

;; swiper
(require 'swiper)
(global-set-key (kbd "C-f") 'swiper-all)

;; PACKAGE: avy
(require 'avy)

;; PACKGE: eyebrowse
(require 'eyebrowse)
(eyebrowse-mode t)

(require 'highlight-indentation)
;;(add-hook 'python-mode-hook 'highlight-indentation-mode)
;;(add-hook 'js2-mode-hook 'highlight-indentation-mode)
;; (set-face-font 'highlight-indentation-face "Monospace")
;; (set-face-background 'highlight-indentation-face "#0d0d0d")
;; (set-face-attribute 'highlight-indentation-face nil :height 54)

;; PACKAGE: iedit`
;; (require 'iedit)
;; ;; iedit mode가 시작되고 실행되는 코드
;; (eval-after-load "iedit"
;;   (lambda()
;;     ;; iedit 모드에서 `키로 선택 해제를 합니다 (default: M-;)
;;     (define-key iedit-mode-keymap (kbd "`") 'iedit-toggle-selection)
;;     ))
; PACKAGE: iedit
(require 'iedit)
;; iedit mode가 시작되고 실행되는 코드
(eval-after-load "iedit"
  (lambda()
    ;; iedit 모드에서 `키로 선택 해제를 합니다 (default: M-;)
    (define-key iedit-mode-keymap (kbd "q") 'iedit-toggle-selection)
    (define-key iedit-mode-occurrence-keymap (kbd "q") 'iedit-toggle-selection)
    ))

;; Alt + [ 키로 선택된 단어를 iedit 일괄편집합니다
(global-set-key (kbd "M-[") 'iedit-mode)
;; 원래 C-; 가 iedit-mode로 키바인딩 되어있는 것을 해제합니다
;; (global-set-key (kbd "C-;") nil)



;;------------------------------------------------------------------------------------------
;; ace window
;;------------------------------------------------------------------------------------------

;; Add ace-window hotkey.
(global-set-key (kbd "M-o") 'ace-window)

;; Set window resize hotkeys.

(global-set-key (kbd "S-C-<left>")  'shrink-window-horizontally)
(global-set-key (kbd "S-C-<right>") 'enlarge-window-horizontally)
(global-set-key (kbd "S-C-<up>")  'shrink-window)
(global-set-key (kbd "S-C-<down>")    'enlarge-window)



;;------------------------------------------------------------------------------------------
;; matlab
;;------------------------------------------------------------------------------------------

(setq matlab-shell-command "/Applications/MATLAB_R2019b.app/bin/matlab")
(setq matlab-shell-command-switches (list "-nodesktop"))
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-enabled-themes (quote (misterioso)))
 '(package-selected-packages
   (quote
    (web-mode ess helm-rg helm-projectile projectile ein jupyter pyvenv flycheck-pyflakes live-py-mode company-jedi jedi anaconda-mode swift-mode ace-window matlab-mode yasnippet swiper iedit highlight-indentation flycheck eyebrowse avy anzu))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )


;;====================================================================================
;; whitespace mode 
;;====================================================================================

;; (require 'whitespace-mode)
;; (add-hook 'after-init-hook 'whitespace-mode)
(global-whitespace-mode t)

(setq whitespace-display-mappings '(
  (space-mark   ?\     [?\u00B7]     [?.])
  (space-mark   ?\xA0  [?\u00A4]     [?_])
  (newline-mark ?\n    [?¶ ?\n])
  (tab-mark     ?\t    [?\u00BB ?\t] [?\\ ?\t])
            ))

;; lines lines-tail newline trailing space-before-tab space-afte-tab empty
;; indentation-space indentation indentation-tab tabs spaces
(setq whitespace-style '(face space-mark tab-mark newline-mark) )

(setq whitespace-line-column 85)

;;====================================================================================
;; Anaconda mode
;; 실행방법: C-c C-p C-p C-p
;;====================================================================================

(add-hook 'python-mode-hook 'anaconda-mode)

(setq python-shell-completion-native-enable nil)

(defun set-exec-path-from-shell-PATH ()
        (interactive)
        (let ((path-from-shell (replace-regexp-in-string "^.*\n.*shell\n" "" (shell-command-to-string "$SHELL --login -i -c 'echo $PATH'"))))
        (setenv "PATH" path-from-shell)
        (setq exec-path (split-string path-from-shell path-separator))))
 
(set-exec-path-from-shell-PATH)

;; (pyvenv-activate (expand-file-name "~/anaconda/envs/py27")) 



;;====================================================================================
;; Bookmark
;;====================================================================================

;; ;;북 마크 열기
(global-set-key (kbd "C-M-b") 'bookmark-bmenu-list)

;; ;;북 마크에 저장 하기
;; (global-set-key "C-b C-s" 'bookmark-set)

;;북 마크에 저장 하기 Alt + b
(global-set-key (kbd "C-M-s") 'bookmark-set)

;; 북마크 삭제 Ctrl + Alt + b
(global-set-key (kbd "C-M-d") 'bookmark-delete)

;;북 마크 열기 Alt + v
(global-set-key (kbd "C-M-j") 'bookmark-jump)
;; (define-key cua--cua-keys-keymap (kbd "C-M-v") 'bookmark-jump) 
 

;;====================================================================================
;; Jupyter notebook
;; 실행방법: ein:notebooklist-open (단, 이전에 terminal 에서 jupyter notebook 을 수행한 후) 
;;====================================================================================

(require 'ein)
(require 'ein-notebook)
(require 'ein-subpackages)

(global-set-key (kbd "C-M-e") 'ein:notebook-open)


;;====================================================================================
;; company-mode
;;====================================================================================

(add-hook 'after-init-hook 'global-company-mode)

;;====================================================================================
;; projecttile & helm-projectile
;;====================================================================================

(require 'projectile)
(projectile-global-mode)

(require 'helm-projectile)
(global-set-key (kbd "C-x p") 'helm-projectile)
(global-set-key (kbd "C-x g") 'helm-projectile-grep)
(global-set-key (kbd "C-x r") 'helm-projectile-rg)

;; C-1 키로 현재 파일에서 빠르게 특정 함수나 변수로 이동합니다
(global-set-key (kbd "C-1") 'helm-semantic)
                                        ;
;; C-2 키로 find file 파일이 존재하는지 검색합니다
(global-set-key (kbd "C-2") 'helm-find)

;; C-3 키로 find dir 폴더가 존재하는지 검색합니다
(global-set-key (kbd "C-3") 'helm-projectile-find-dir)


;;====================================================================================
;; projecttile & helm-projectile
;;====================================================================================

;; PACKGE: eyebrowse
(require 'eyebrowse)
(eyebrowse-mode t)

(setq eyebrowse-new-workspace t)
(setq eyebrowse-wrap-around t)
(setq eyebrowse-switch-back-and-forth t)
(setq eyebrowse-new-workspace nil)
(setq eyebrowse-mode-line-style (quote always))

(use-package eyebrowse
  :diminish eyebrowse-mode
  :config (progn
            (define-key eyebrowse-mode-map (kbd "M-1") 'eyebrowse-switch-to-window-config-1)
            (define-key eyebrowse-mode-map (kbd "M-2") 'eyebrowse-switch-to-window-config-2)
            (define-key eyebrowse-mode-map (kbd "M-3") 'eyebrowse-switch-to-window-config-3)
            (define-key eyebrowse-mode-map (kbd "M-4") 'eyebrowse-switch-to-window-config-4)
            (eyebrowse-mode t)
            (setq eyebrowse-new-workspace t)))


;;====================================================================================
;; swiper mode
;;====================================================================================

(require 'swiper)
(global-set-key (kbd "S-C-s") 'swiper-all)


;;====================================================================================
;; iedit 
;;====================================================================================

;; (require 'iedit)
;; (eval-after-load "iedit"
;; 	(lambda()
;; 		(define-key iedit-mode-keymap (kbd "C-M-f") 'iedit-toggle-selection)
;; 		))

;; PACKAGE: iedit
(require 'iedit)
;; iedit mode가 시작되고 실행되는 코드
(eval-after-load "iedit"
  (lambda()
    ;; iedit 모드에서 `키로 선택 해제를 합니다 (default: M-;)
    (define-key iedit-mode-keymap (kbd "q") 'iedit-toggle-selection)
    (define-key iedit-mode-occurrence-keymap (kbd "q") 'iedit-toggle-selection)
    ))

;; Alt + [ 키로 선택된 단어를 iedit 일괄편집합니다
(global-set-key (kbd "S-C-i") 'iedit-mode)
;; 원래 C-; 가 iedit-mode로 키바인딩 되어있는 것을 해제합니다
(global-set-key (kbd "S-C-;") nil)

;;====================================================================================
;; Comment region
;;====================================================================================

;; comment 
(defun endless/comment-line-or-region (n)
  "Comment or uncomment current line and proceed to the next line.
With positive prefix, apply to N lines including current one.
With negative prefix, apply to -N lines above.
If region is active, apply to active region instead."
  (interactive "p")
  (if (use-region-p)
      (comment-or-uncomment-region
       (region-beginning) (region-end))
    (let ((range
           (list (line-beginning-position)
                 (goto-char (line-end-position n)))))
      (comment-or-uncomment-region
       (apply #'min range)
       (apply #'max range)))
    (forward-line 1)
    (back-to-indentation)))

;; Unbind the M-; key from `matlab-mode-map'
;; `with-eval-after-load' will work in emacs 24.4 and newer versions
(with-eval-after-load 'matlab
  (define-key matlab-mode-map (kbd "M-;") nil)) 

;; For emacs 24.3 and older versions use `eval-after-load' instead
;; of `with-eval-after-load'. Note that `eval-after-load' accepts
;; only a single quoted form.
;; (eval-after-load 'matlab
;;   '(define-key matlab-mode-map (kbd "M-;") nil)) 

;; Define the M-; binding globally
;; This binding will be effective in any major-mode that does not
;; have that major-mode-specific M-; binding
(global-set-key (kbd "M-;") #'endless/comment-line-or-region) 


;;====================================================================================
;; tramp 
;;====================================================================================

;; 사용법
;; C-x C-f RET /ftp:skyer9@test.co.kr:
;; C-x C-f RET /ftp:skyer9@test.co.kr:파일명
(require 'tramp)

;; 패스워드를 저장한다.(Emacs 를 종료하면 지워진다.)
(setq password-cache-expiry nil)

;;====================================================================================
;; web-mode
;;====================================================================================

(require 'web-mode)

(add-to-list 'auto-mode-alist '("\\.phtml\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.tpl\\.php\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.[agj]sp\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.as[cp]x\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.erb\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.erb\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.djhtml\\'" . web-mode))
